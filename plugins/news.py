from random import choice

import aiohttp
import xmltodict

from plugin_system import Plugin
from settings import PREFIXES
from utils import unquote

# yandex news
news = {"–ê—Ä–º–∏—è \n": "https://news.yandex.ru/army.rss",
        "–ê–≤—Ç–æ \n": "https://news.yandex.ru/auto.rss",
        "–ú–∏—Ä \n": "https://news.yandex.ru/world.rss",
        "–ì–ª–∞–≤–Ω–æ–µ \n": "https://news.yandex.ru/index.rss",
        "–ò–≥—Ä—ã \n": "https://news.yandex.ru/games.rss",
        "–ò–Ω—Ç–µ—Ä–µ–Ω–µ—Ç \n": "https://news.yandex.ru/internet.rss",
        "–ö–∏–Ω–æ \n": "https://news.yandex.ru/movies.rss",
        "–ú—É–∑—ã–∫–∞ \n": "https://news.yandex.ru/music.rss",
        "–ü–æ–ª–∏—Ç–∏–∫–∞ \n": "https://news.yandex.ru/politics.rss",
        "–ù–∞—É–∫–∞ \n": "https://news.yandex.ru/science.rss",
        "–≠–∫–æ–Ω–æ–º–∏–∫–∞ \n": "https://news.yandex.ru/business.rss",
        "–°–ø–æ—Ä—Ç \n": "https://news.yandex.ru/sport.rss",
        "–ü—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏—è \n": "https://news.yandex.ru/incident.rss",
        "–ö–æ—Å–º–æ—Å \n": "https://news.yandex.ru/cosmos.rss"}

plugin = Plugin("–ù–æ–≤–æ—Å—Ç–∏",
                usage=["–Ω–æ–≤–æ—Å—Ç–∏ - –ø–æ–∫–∞–∑–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å",
                       "–Ω–æ–≤–æ—Å—Ç–∏ [—Ç–µ–º–∞] - –ø–æ–∫–∞–∑–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–π —Ç–µ–º–∞—Ç–∏–∫–∏",
                       "–Ω–æ–≤–æ—Å—Ç–∏ –ø–æ–º–æ—â—å - –ø–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–º—ã"])


@plugin.on_command('–ù–æ–≤–æ—Å—Ç–∏')
async def show_news(msg, args):
    url = news["–≥–ª–∞–≤–Ω–æ–µ"]

    if args:
        category = args.pop()

        if category.lower() in ["–ø–æ–º–æ—â—å", "–ø–æ–º–æ—â", "–ø–æ–º–æ–≥–∏", "–ø–æ–º–æ–≥"]:
            return await msg.answer(f"{PREFIXES[0]}–Ω–æ–≤–æ—Å—Ç–∏ [—Ç–µ–º–∞], –≥–¥–µ —Ç–µ–º–∞ - —ç—Ç–æ –æ–¥–Ω–æ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —Å–ª–æ–≤:\n"
                                    f"{', '.join([k[0].upper() + k[1:] for k in news.keys()])}")

        if category.lower() in news:
            url = news[category]

    async with aiohttp.ClientSession() as sess:
        async with sess.get(url) as resp:
            xml = xmltodict.parse(await resp.text())
            items = xml["rss"]["channel"]["item"]
            item = unquote(choice(items))

            return await msg.answer(f'üëâ {item["title"]}\n'
                                    f'üëâ {item["description"]}')
@plugin.on_command('–¢–µ–º—ã')
async def show_news(msg, args):

    if args:
        category = args.pop()

        if category.lower() in ["–Ω–æ–≤–æ—Å—Ç–µ–π"]:
            return await msg.answer(f"{PREFIXES[0]}–î–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π –ø–æ —Ç–µ–º–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É <–ù–æ–≤–æ—Å—Ç–∏ [—Ç–µ–º–∞]>, –≥–¥–µ —Ç–µ–º–∞ - —ç—Ç–æ –æ–¥–Ω–æ –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —Å–ª–æ–≤:\n"
                                    f"{''.join([k[0].upper() + k[1:] for k in news.keys()])}")

        if category.lower() in news:
            url = news[category]